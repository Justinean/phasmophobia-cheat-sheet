{"version":3,"sources":["components/link/Link.js","components/navbar/Navbar.js","components/welcome/Welcome.js","components/ghost/Ghost.js","components/photos/Photos.js","App.js","reportWebVitals.js","index.js"],"names":["Links","currentPage","handlePageChange","locationName","displayName","window","location","origin","console","log","href","className","onClick","Navbar","links","onresize","document","querySelectorAll","forEach","item","classList","add","linkEls","remove","Link","Welcome","Ghost","useState","ghostData","ghosts","setGhosts","updateGhostList","a","evid","evidence","i","value","push","filter","ghost","valid","includes","Container","Row","Col","sm","Form","Select","onChange","defaultValue","map","name","description","strength","weakness","Photos","App","setCurrentPage","page","renderPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa13efdf.chunk.js","sourcesContent":["import './link.css';\r\n\r\nfunction Links({currentPage, handlePageChange, locationName, displayName}) {\r\n    if (window.location.origin === \"https://justinean.github.io\") {\r\n        console.log(window.location.origin)\r\n        return (\r\n                <a href={`/phasmophobia-cheat-sheet/#${locationName}`} className={currentPage === locationName ? \"active navlink hidden\" : \"navlink hidden\"} onClick={() => handlePageChange(locationName)}>{displayName}</a>\r\n        )\r\n    } else {\r\n        return (\r\n            <a href={`/#${locationName}`} className={currentPage === locationName ? \"active navlink hidden\" : \"navlink hidden\"} onClick={() => handlePageChange(locationName)}>{displayName}</a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Links;","import Link from '../link/Link';\r\nimport React from 'react';\r\nimport './navbar.css';\r\n\r\nfunction Navbar({ currentPage, handlePageChange }) {\r\n    let links = false;\r\n\r\n    const checkSize = () => {\r\n        let linkEls = document.querySelectorAll(\".navlink\")\r\n        linkEls.forEach(item => {\r\n            item.classList.add(\"hidden\");\r\n            links = false;\r\n        })\r\n    }\r\n\r\n    const showLinks = () => {\r\n        let linkEls = document.querySelectorAll(\".navlink\")\r\n        if (links) {\r\n            linkEls.forEach(item => {\r\n                item.classList.add(\"hidden\")\r\n            })\r\n            links = false;\r\n        } else {\r\n            linkEls.forEach(item => {\r\n                item.classList.remove(\"hidden\")\r\n            })\r\n            links = true;\r\n        }\r\n    }\r\n\r\n    window.onresize = checkSize;\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h1>Phasmophobia cheatsheet</h1>\r\n            <button className=\"linkButton\" onClick={showLinks}><p>_</p><p>_</p><p>_</p></button>\r\n            <br />\r\n            <div className=\"navbarLinks\">\r\n                <Link currentPage={currentPage} handlePageChange={handlePageChange} displayName=\"Welcome\" locationName=\"welcome\" />\r\n                \r\n                <Link currentPage={currentPage} handlePageChange={handlePageChange} displayName=\"Ghost\" locationName=\"ghost\" />\r\n                \r\n                <Link currentPage={currentPage} handlePageChange={handlePageChange} displayName=\"Photos\" locationName=\"photos\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\n\r\nfunction Welcome() {\r\n    return (\r\n        <div className=\"welcome\">\r\n            <h1>This is a cheat sheet for the game phasmophobia.</h1>\r\n            <p>Aka, this is to make up for my bad memory.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import ghostData from '../../ghostData.json';\r\nimport { Form, Container, Col, Row } from 'react-bootstrap';\r\nimport {useState} from 'react';\r\n\r\nfunction Ghost() {\r\n    const [ghosts, setGhosts] = useState(ghostData)\r\n\r\n    const updateGhostList = async () => {\r\n        let evid = document.querySelectorAll('.evidences')\r\n        let evidence = []\r\n        for (let i = 0; i < 3; i++) {\r\n            if (evid[i].value !== \"None\") {\r\n                evidence.push(evid[i].value)\r\n            }\r\n        }\r\n        setGhosts(ghostData.filter(ghost => {\r\n            let valid = []\r\n            for (let i in evidence) {\r\n                if (ghost.evidence.includes(evidence[i])) {\r\n                    valid.push(true);\r\n                } else {\r\n                    valid.push(false);\r\n                }\r\n            }\r\n            for (let i in valid) {\r\n                if (!valid[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"ghost\">\r\n            <div className=\"currentEvidence\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm={4}>\r\n                        <h2>Evidence 1:</h2>\r\n                            <Form.Select className=\"evidences\" onChange={updateGhostList}>\r\n                                <option defaultValue value=\"None\">Select One</option>\r\n                                <option value=\"EMF Level 5\">EMF Level 5</option>\r\n                                <option value=\"Spirit Box\">Spirit Box</option>\r\n                                <option value=\"Fingerprints\">Fingerprints</option>\r\n                                <option value=\"Ghost Orb\">Ghost Orb</option>\r\n                                <option value=\"Ghost Writing\">Ghost Writing</option>\r\n                                <option value=\"Freezing Temperatures\">Freezing Temperatures</option>\r\n                                <option value=\"D.O.T.S\">D.O.T.S</option>\r\n                            </Form.Select>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <h2>Evidence 2:</h2>\r\n                            <Form.Select className=\"evidences\" onChange={updateGhostList}>\r\n                                <option defaultValue value=\"None\">Select One</option>\r\n                                <option value=\"EMF Level 5\">EMF Level 5</option>\r\n                                <option value=\"Spirit Box\">Spirit Box</option>\r\n                                <option value=\"Fingerprints\">Fingerprints</option>\r\n                                <option value=\"Ghost Orb\">Ghost Orb</option>\r\n                                <option value=\"Ghost Writing\">Ghost Writing</option>\r\n                                <option value=\"Freezing Temperatures\">Freezing Temperatures</option>\r\n                                <option value=\"D.O.T.S\">D.O.T.S</option>\r\n                            </Form.Select>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <h2>Evidence 3:</h2>\r\n                            <Form.Select className=\"evidences\" onChange={updateGhostList}>\r\n                                <option defaultValue value=\"None\">Select One</option>\r\n                                <option value=\"EMF Level 5\">EMF Level 5</option>\r\n                                <option value=\"Spirit Box\">Spirit Box</option>\r\n                                <option value=\"Fingerprints\">Fingerprints</option>\r\n                                <option value=\"Ghost Orb\">Ghost Orb</option>\r\n                                <option value=\"Ghost Writing\">Ghost Writing</option>\r\n                                <option value=\"Freezing Temperatures\">Freezing Temperatures</option>\r\n                                <option value=\"D.O.T.S\">D.O.T.S</option>\r\n                            </Form.Select>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <div className=\"possibleGhosts\">\r\n                <h1>Possible Ghosts:</h1>\r\n                {ghosts.map(ghost => {\r\n                    return (\r\n                        <div className=\"ghostDetails\">\r\n                            <h2>{ghost.name}</h2>\r\n                            <p className=\"description\">{ghost.description}</p>\r\n                            <p className=\"strength\">Strength: {ghost.strength}</p>\r\n                            <p className=\"weakness\">Weakness: {ghost.weakness}</p>\r\n                            <p className=\"evidence\">Evidence: </p>\r\n                            <ul>{ghost.evidence.map((evidence, i) => <li key={i}>{evidence}</li>)}</ul>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ghost;","import './photos.css';\r\n\r\nfunction Photos() {\r\n    return (\r\n        <div className=\"photos\">\r\n            <h1>Photos</h1>\r\n            <div className=\"information\">\r\n                <div className=\"points\">\r\n                    <h2>Points:</h2>\r\n                    <p>(Points are for 3 stars only)</p>\r\n                    <ul>\r\n                        <li>Ghost: 100pts</li>\r\n                        <li>Bone: 70pts</li>\r\n                        <li>Ouija Board: 60pts</li>\r\n                        <li>Fingerprints: 50pts</li>\r\n                        <li>Interaction/Footprints: 40pts</li>\r\n                        <li>Dead body/Dirty water: 30pts</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"money\">\r\n                    <h2>Money:</h2>\r\n                    <ul>\r\n                        <li>500 = 40$</li>\r\n                        <li>400-499 = 35$</li>\r\n                        <li>300-399 = 30$</li>\r\n                        <li>200-299 = 25$</li>\r\n                        <li>100-199 = 20$</li>\r\n                        <li>50-99 = 15$</li>\r\n                        <li>1-49 = 10$</li>\r\n                        <li>0 = 0$</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"input\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos;","import Navbar from './components/navbar/Navbar';\nimport Welcome from './components/welcome/Welcome';\nimport {useState} from 'react';\nimport Ghost from './components/ghost/Ghost';\nimport Photos from './components/photos/Photos';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('aboutme');\n\n  const handlePageChange = (page) => {\n      let linkEls = document.querySelectorAll(\".navlink\")\n      linkEls.forEach(item => {\n          item.classList.add(\"hidden\");\n      })\n      setCurrentPage(page)\n  };\n\n  const renderPage = () => {\n    switch(currentPage) {\n      case \"ghost\":\n        return <Ghost />\n      case \"photos\":\n        return <Photos />\n      default:\n        return <Welcome />\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <Navbar currentPage={currentPage} handlePageChange={handlePageChange}/>\n      {renderPage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}